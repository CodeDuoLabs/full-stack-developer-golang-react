// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/tasks": {
            "get": {
                "description": "Retrieves a list of all tasks stored in the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "List all tasks",
                "responses": {
                    "200": {
                        "description": "List of tasks",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/task_manager_internal_response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Task"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve tasks",
                        "schema": {
                            "$ref": "#/definitions/task_manager_internal_response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a task with the provided name and status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Create a new task",
                "parameters": [
                    {
                        "description": "Task object to create",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Task"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created task",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/task_manager_internal_response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Task"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/task_manager_internal_response.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create task",
                        "schema": {
                            "$ref": "#/definitions/task_manager_internal_response.Response"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "description": "Retrieves a task by its unique identifier.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/task_manager_internal_response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Task"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/task_manager_internal_response.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the details of a task identified by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Update a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated task object",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated task",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/task_manager_internal_response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Task"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/task_manager_internal_response.Response"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/task_manager_internal_response.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to update task",
                        "schema": {
                            "$ref": "#/definitions/task_manager_internal_response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a task identified by its unique identifier.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Delete a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Task deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/task_manager_internal_response.Response"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/task_manager_internal_response.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete task",
                        "schema": {
                            "$ref": "#/definitions/task_manager_internal_response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Task": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.TaskStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.TaskStatus": {
            "type": "string",
            "enum": [
                "Pending",
                "Completed"
            ],
            "x-enum-varnames": [
                "StatusPending",
                "StatusCompleted"
            ]
        },
        "task_manager_internal_response.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Task Manager API",
	Description:      "A simple task management API built with Go and Gin.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
